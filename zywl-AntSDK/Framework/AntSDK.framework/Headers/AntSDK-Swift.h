// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef ANTSDK_SWIFT_H
#define ANTSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AntSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
enum AntAlarmType : NSInteger;

SWIFT_CLASS("_TtC6AntSDK13AntAlarmModel")
@interface AntAlarmModel : NSObject
@property (nonatomic, copy) NSString * _Nullable alarmIndex;
@property (nonatomic) BOOL alarmOpen;
@property (nonatomic, copy) NSString * _Nullable alarmTime;
@property (nonatomic) enum AntAlarmType alarmType;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable alarmRepeatArray;
@property (nonatomic, copy) NSString * _Nullable alarmRepeatCount;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, AntAlarmType, open) {
  AntAlarmTypeSingle = 0,
  AntAlarmTypeCycle = 1,
};

@class CBUUID;
@class CBPeripheral;
@class AntScanModel;

SWIFT_CLASS("_TtC6AntSDK13AntBaseModule")
@interface AntBaseModule : NSObject
/// 已配对设备的UUID数组，用来获取被手机系统配对的设备。默认不获取已被手机配对的设备
@property (nonatomic, copy) NSArray<CBUUID *> * _Nullable matchingUUIDArray;
/// 过滤设备的UUID数组。默认扫描所有设备
@property (nonatomic, copy) NSArray<CBUUID *> * _Nullable serviceUUIDArray;
/// 扫描时间
@property (nonatomic) NSInteger scanInterval;
@property (nonatomic, readonly, strong) CBPeripheral * _Nullable peripheral;
@property (nonatomic, readonly) CBCentralManagerState blePowerState;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)peripheralStateChangeWithState:(void (^ _Nonnull)(CBPeripheralState))state;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (void)bluetoothPowerStateChangeWithState:(void (^ _Nonnull)(CBCentralManagerState))state;
- (void)setIsNeedReconnectWithState:(BOOL)state;
- (void)reconnectDeviceWithComplete:(void (^ _Nonnull)(void))complete;
- (NSString * _Nonnull)getReconnectIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)getSystemListPeripheralWithModelArray:(void (^ _Nonnull)(NSArray<AntScanModel *> * _Nonnull))modelArray;
/// 扫描设备，每新增一个设备都会有回调
/// \param scanModel 扫描到的设备
///
/// \param modelArray 所有扫描到的设备数组，包括系统蓝牙列表已连接的
///
///
/// returns:
///
- (void)scanDeviceWithScanModel:(void (^ _Nonnull)(AntScanModel * _Nonnull))scanModel modelArray:(void (^ _Nonnull)(NSArray<AntScanModel *> * _Nonnull))modelArray;
/// 停止扫描
- (void)stopScan;
/// 连接设备
/// \param peripheral 支持String跟CBPeripheral两种
///
/// \param connectState 连接状态
///
///
/// returns:
///
- (void)connectDeviceWithPeripheral:(id _Nonnull)peripheral connectState:(void (^ _Nonnull)(BOOL))connectState;
/// 断开连接
- (void)disconnect;
- (NSArray<NSNumber *> * _Nonnull)getNotificationTypeArrayWithIntStringWithCountString:(NSString * _Nonnull)countString SWIFT_WARN_UNUSED_RESULT;
@end

enum AntError : NSInteger;
@class UIColor;
@class UIImage;
@class AntStartEndTimeModel;
@class AntOnlineDialModel;

SWIFT_CLASS("_TtC6AntSDK16AntCommandModule")
@interface AntCommandModule : AntBaseModule
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AntCommandModule * _Nonnull shareInstance;)
+ (AntCommandModule * _Nonnull)shareInstance SWIFT_WARN_UNUSED_RESULT;
- (void)GetDeviceName:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)GetFirmwareVersion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)GetSerialNumber:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)GetMac:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)GetBattery:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetTimeWithTime:(id _Nullable)time success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetDeviceSupportList:(void (^ _Nonnull)(NSString * _Nonnull))success;
- (void)GetDeviceOtaVersionInfo:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)GetPersonalInformation:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetPersonalInformationWithAge:(NSString * _Nonnull)age height:(NSString * _Nonnull)height weight:(NSString * _Nonnull)weight gender:(NSString * _Nonnull)gender success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetTimeFormat:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetTimeFormatWithFormat:(NSString * _Nonnull)format success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetMetricSystem:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetMetricSystemWithMetric:(NSString * _Nonnull)metric success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetWeatherWithDayCount:(NSString * _Nonnull)dayCount type:(NSString * _Nonnull)type temp:(NSString * _Nonnull)temp airQuality:(NSString * _Nonnull)airQuality minTemp:(NSString * _Nonnull)minTemp maxTemp:(NSString * _Nonnull)maxTemp tomorrowMinTemp:(NSString * _Nonnull)tomorrowMinTemp tomorrowMaxTemp:(NSString * _Nonnull)tomorrowMaxTemp success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetInterCameraWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)SetFindDeviceWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)GetLightScreen:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetLightScreenWithIsOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetScreenLevel:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetScreenLevelWithValue:(NSString * _Nonnull)value success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetScreenTimeLong:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetScreenTimeLongWithValue:(NSString * _Nonnull)value success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetLocalDial:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetLocalDialWithIndex:(NSString * _Nonnull)index success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetAlarmWithIndex:(NSString * _Nonnull)index success:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetAlarmWithIndex:(NSString * _Nonnull)index repeatCount:(NSString * _Nonnull)repeatCount hour:(NSString * _Nonnull)hour minute:(NSString * _Nonnull)minute success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetAlarmModelWithModel:(AntAlarmModel * _Nonnull)model success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetDeviceLanguage:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetDeviceLanguageWithIndex:(NSString * _Nonnull)index success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetStepGoal:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetStepGoalWithTarget:(NSString * _Nonnull)target success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetDispalyMode:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetDispalyModeWithIsVertical:(NSString * _Nonnull)isVertical success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetWearingWay:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetWearingWayWithIsLeftHand:(NSString * _Nonnull)isLeftHand success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetSingleMeasurementWithType:(NSString * _Nonnull)type isOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetExerciseMode:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetExerciseModeWithType:(NSString * _Nonnull)type isOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetDeviceModeWithType:(NSString * _Nonnull)type isOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetPhoneModeWithType:(NSString * _Nonnull)type success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetWeatherUnit:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetWeatherUnitWithType:(NSString * _Nonnull)type success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetReportRealtimeDataWithIsOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetCustomDialEdit:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetCustomDialEditWithColor:(UIColor * _Nonnull)color positionType:(NSString * _Nonnull)positionType timeUpType:(NSString * _Nonnull)timeUpType timeDownType:(NSString * _Nonnull)timeDownType success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetCustomDialEditWithImage:(UIImage * _Nonnull)image progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetPhoneStateWithState:(NSString * _Nonnull)state success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetCustonDialFrameSize:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)Get24HrMonitor:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)Set24HrMonitorWithIsOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetNotificationRemind:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetNotificationRemindWithIsOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetNotificationRemindArrayWithArray:(NSArray<NSNumber *> * _Nonnull)array success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetSedentary:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetSedentaryWithIsOpen:(NSString * _Nonnull)isOpen timeLong:(NSString * _Nonnull)timeLong timeArray:(NSArray<AntStartEndTimeModel *> * _Nonnull)timeArray success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetSedentaryWithIsOpen:(NSString * _Nonnull)isOpen timeLong:(NSString * _Nonnull)timeLong startHour:(NSString * _Nonnull)startHour startMinute:(NSString * _Nonnull)startMinute endHour:(NSString * _Nonnull)endHour endMinute:(NSString * _Nonnull)endMinute success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetLost:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetLostWithIsOpen:(NSString * _Nonnull)isOpen success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetDoNotDisturb:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetDoNotDisturbWithIsOpen:(NSString * _Nonnull)isOpen startHour:(NSString * _Nonnull)startHour startMinute:(NSString * _Nonnull)startMinute endHour:(NSString * _Nonnull)endHour endMinute:(NSString * _Nonnull)endMinute success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetHrWaring:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetHrWaringWithIsOpen:(NSString * _Nonnull)isOpen maxHr:(NSString * _Nonnull)maxHr minHr:(NSString * _Nonnull)minHr success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetMenstrualCycle:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetMenstrualCycleWithType:(NSString * _Nonnull)type cycleCount:(NSString * _Nonnull)cycleCount menstrualCount:(NSString * _Nonnull)menstrualCount lastMonth:(NSString * _Nonnull)lastMonth lastDay:(NSString * _Nonnull)lastDay remindHour:(NSString * _Nonnull)remindHour remindMinute:(NSString * _Nonnull)remindMinute success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetWashHand:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetWashHandWithIsOpen:(NSString * _Nonnull)isOpen startHour:(NSString * _Nonnull)startHour startMinute:(NSString * _Nonnull)startMinute targetCount:(NSString * _Nonnull)targetCount remindInterval:(NSString * _Nonnull)remindInterval success:(void (^ _Nonnull)(enum AntError))success;
- (void)GetDrinkWater:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetDrinkWaterWithIsOpen:(NSString * _Nonnull)isOpen startHour:(NSString * _Nonnull)startHour startMinute:(NSString * _Nonnull)startMinute endHour:(NSString * _Nonnull)endHour endMinute:(NSString * _Nonnull)endMinute remindCount:(NSString * _Nonnull)remindCount remindInterval:(NSString * _Nonnull)remindInterval success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetSyncHealthDataWithType:(NSString * _Nonnull)type dayCount:(NSString * _Nonnull)dayCount success:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetSyncExerciseDataWithType:(NSString * _Nonnull)type numberCount:(NSString * _Nonnull)numberCount success:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)SetPowerTurnOffWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)SetFactoryDataResetWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)SetMotorVibrationWithType:(NSString * _Nonnull)type success:(void (^ _Nonnull)(enum AntError))success;
- (void)setRestartWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)ReportRealTimeStepWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)ReportRealTimeHrWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)ReportSingleMeasurementResultWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)ReportSingleExerciseEndWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)ReportFindPhoneWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)ReportEndFindPhoneWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)ReportTakePicturesWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)ReportMusicControlWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)ReportCallControlWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)setOtaStartUpgradeWithType:(NSInteger)type localFile:(id _Nonnull)localFile isContinue:(BOOL)isContinue progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(enum AntError))success;
- (void)SetSubpackageInformationInteractionWithMaxSend:(NSInteger)maxSend maxReceive:(NSInteger)maxReceive success:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)replySubpackageInformationInteractionWithState:(NSInteger)state maxSend:(NSInteger)maxSend maxReceive:(NSInteger)maxReceive success:(void (^ _Nonnull)(enum AntError))success;
- (void)setStartUpgradeWithType:(NSInteger)type localFile:(id _Nonnull)localFile maxCount:(NSInteger)maxCount isContinue:(BOOL)isContinue progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(enum AntError))success;
- (void)setStopUpgradeWithSuccess:(void (^ _Nonnull)(enum AntError))success;
- (void)checkUpgradeStateWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)getServerOtaDeviceInfoWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull, enum AntError))success;
- (void)setAutoServerOtaDeviceInfoWithProgress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(enum AntError))success;
- (void)getOnlineDialListWithSuccess:(void (^ _Nonnull)(NSArray<AntOnlineDialModel *> * _Nonnull, enum AntError))success;
- (void)getOnlineDialListWithPageIndex:(NSInteger)pageIndex pageSize:(NSInteger)pageSize page:(void (^ _Nonnull)(NSArray<AntOnlineDialModel *> * _Nonnull, enum AntError))success;
- (void)setOnlienDialFileWithModel:(id _Nonnull)model progress:(void (^ _Nonnull)(float))progress success:(void (^ _Nonnull)(enum AntError))success;
- (void)testMultiplePackagesWithCmdClass:(NSInteger)cmdClass cmdId:(NSInteger)cmdId totalLength:(NSInteger)totalLength subpackageLength:(NSInteger)subpackageLength;
- (void)testUtf8StringDataWithCmdClass:(NSInteger)cmdClass cmdId:(NSInteger)cmdId type:(NSString * _Nonnull)type sendString:(NSString * _Nonnull)sendString;
- (void)testUnicodeStringDataWithCmdClass:(NSInteger)cmdClass cmdId:(NSInteger)cmdId type:(NSString * _Nonnull)type sendString:(NSString * _Nonnull)sendString;
@end

typedef SWIFT_ENUM(NSInteger, AntError, open) {
  AntErrorNone = 0,
  AntErrorDisconnected = 1,
  AntErrorInvalidCharacteristic = 2,
  AntErrorInvalidLength = 3,
  AntErrorInvalidState = 4,
  AntErrorNotSupport = 5,
  AntErrorNoMoreData = 6,
  AntErrorFail = 7,
};

typedef SWIFT_ENUM(NSInteger, AntNotificationType, open) {
  AntNotificationTypeCall = 1,
  AntNotificationTypeSMS = 2,
  AntNotificationTypeInstagram = 3,
  AntNotificationTypeWechat = 4,
  AntNotificationTypeQQ = 5,
  AntNotificationTypeLine = 6,
  AntNotificationTypeLinkedIn = 7,
  AntNotificationTypeWhatsApp = 8,
  AntNotificationTypeTwitter = 9,
  AntNotificationTypeFacebook = 10,
  AntNotificationTypeMessenger = 11,
  AntNotificationTypeSkype = 12,
  AntNotificationTypeSnapchat = 13,
  AntNotificationTypeOther = 15,
};


SWIFT_CLASS("_TtC6AntSDK18AntOnlineDialModel")
@interface AntOnlineDialModel : NSObject
@property (nonatomic) NSInteger dialId;
@property (nonatomic, copy) NSString * _Nullable dialImageUrl;
@property (nonatomic, copy) NSString * _Nullable dialFileUrl;
@property (nonatomic, copy) NSString * _Nullable dialName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6AntSDK9AntSDKLog")
@interface AntSDKLog : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)writeStringToSDKLogWithString:(NSString * _Nonnull)string;
+ (NSString * _Nonnull)showLog SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)showAllLog SWIFT_WARN_UNUSED_RESULT;
+ (void)clear;
@end


SWIFT_CLASS("_TtC6AntSDK12AntScanModel")
@interface AntScanModel : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) NSInteger rssi;
@property (nonatomic, strong) CBPeripheral * _Nullable peripheral;
@property (nonatomic, copy) NSString * _Nullable uuidString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6AntSDK20AntStartEndTimeModel")
@interface AntStartEndTimeModel : NSObject
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMinute;
@property (nonatomic) NSInteger endHour;
@property (nonatomic) NSInteger endMinute;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
