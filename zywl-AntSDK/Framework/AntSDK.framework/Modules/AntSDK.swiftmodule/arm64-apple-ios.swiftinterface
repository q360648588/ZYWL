// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name AntSDK
import Alamofire
@_exported import AntSDK
import CoreBluetooth
import Foundation
import MachO
import Swift
import UIKit
import _Concurrency
import zlib
@objc public enum AntError : Swift.Int {
  case none
  case disconnected
  case invalidCharacteristic
  case invalidLength
  case invalidState
  case notSupport
  case noMoreData
  case fail
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class AntCommandModule : AntSDK.AntBaseModule {
  @objc public static let shareInstance: AntSDK.AntCommandModule
  @objc public func GetDeviceName(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func GetFirmwareVersion(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func GetSerialNumber(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func GetMac(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func GetBattery(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetTime(time: Any? = nil, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetDeviceSupportList(_ success: @escaping ((Swift.String) -> Swift.Void))
  @objc public func GetDeviceOtaVersionInfo(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func GetPersonalInformation(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetPersonalInformation(age: Swift.String, height: Swift.String, weight: Swift.String, gender: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetTimeFormat(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetTimeFormat(format: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetMetricSystem(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetMetricSystem(metric: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetWeather(dayCount: Swift.String, type: Swift.String, temp: Swift.String, airQuality: Swift.String, minTemp: Swift.String, maxTemp: Swift.String, tomorrowMinTemp: Swift.String, tomorrowMaxTemp: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetInterCamera(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetFindDevice(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetLightScreen(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetLightScreen(isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetScreenLevel(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetScreenLevel(value: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetScreenTimeLong(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetScreenTimeLong(value: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetLocalDial(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetLocalDial(index: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetAlarm(index: Swift.String, success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetAlarm(index: Swift.String, repeatCount: Swift.String, hour: Swift.String, minute: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetAlarmModel(model: AntSDK.AntAlarmModel, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetDeviceLanguage(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetDeviceLanguage(index: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetStepGoal(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetStepGoal(target: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetDispalyMode(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetDispalyMode(isVertical: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetWearingWay(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetWearingWay(isLeftHand: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetSingleMeasurement(type: Swift.String, isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetExerciseMode(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetExerciseMode(type: Swift.String, isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetDeviceMode(type: Swift.String, isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetPhoneMode(type: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetWeatherUnit(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetWeatherUnit(type: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetReportRealtimeData(isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetCustomDialEdit(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetCustomDialEdit(color: UIKit.UIColor, positionType: Swift.String, timeUpType: Swift.String, timeDownType: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetCustomDialEdit(image: UIKit.UIImage, progress: @escaping ((Swift.Float) -> Swift.Void), success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetPhoneState(state: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetCustonDialFrameSize(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func Get24HrMonitor(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func Set24HrMonitor(isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetNotificationRemind(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetNotificationRemind(isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetNotificationRemindArray(array: [Swift.Int], success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetSedentary(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetSedentary(isOpen: Swift.String, timeLong: Swift.String, timeArray: [AntSDK.AntStartEndTimeModel], success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetSedentary(isOpen: Swift.String, timeLong: Swift.String, startHour: Swift.String, startMinute: Swift.String, endHour: Swift.String, endMinute: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetLost(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetLost(isOpen: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetDoNotDisturb(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetDoNotDisturb(isOpen: Swift.String, startHour: Swift.String, startMinute: Swift.String, endHour: Swift.String, endMinute: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetHrWaring(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetHrWaring(isOpen: Swift.String, maxHr: Swift.String, minHr: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetMenstrualCycle(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetMenstrualCycle(type: Swift.String, cycleCount: Swift.String, menstrualCount: Swift.String, lastMonth: Swift.String, lastDay: Swift.String, remindHour: Swift.String, remindMinute: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetWashHand(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetWashHand(isOpen: Swift.String, startHour: Swift.String, startMinute: Swift.String, targetCount: Swift.String, remindInterval: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func GetDrinkWater(_ success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetDrinkWater(isOpen: Swift.String, startHour: Swift.String, startMinute: Swift.String, endHour: Swift.String, endMinute: Swift.String, remindCount: Swift.String, remindInterval: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetSyncHealthData(type: Swift.String, dayCount: Swift.String, success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetSyncExerciseData(type: Swift.String, numberCount: Swift.String, success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func SetPowerTurnOff(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetFactoryDataReset(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetMotorVibration(type: Swift.String, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func setRestart(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func ReportRealTimeStep(success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func ReportRealTimeHr(success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func ReportSingleMeasurementResult(success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func ReportSingleExerciseEnd(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func ReportFindPhone(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func ReportEndFindPhone(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func ReportTakePictures(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func ReportMusicControl(success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func ReportCallControl(success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func setOtaStartUpgrade(type: Swift.Int, localFile: Any, isContinue: Swift.Bool, progress: @escaping ((Swift.Float) -> Swift.Void), success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func SetSubpackageInformationInteraction(maxSend: Swift.Int, maxReceive: Swift.Int, success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func replySubpackageInformationInteraction(state: Swift.Int, maxSend: Swift.Int, maxReceive: Swift.Int, success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func setStartUpgrade(type: Swift.Int, localFile: Any, maxCount: Swift.Int, isContinue: Swift.Bool, progress: @escaping ((Swift.Float) -> Swift.Void), success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func setStopUpgrade(success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func checkUpgradeState(success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func getServerOtaDeviceInfo(success: @escaping (([Swift.String : Any], AntSDK.AntError) -> Swift.Void))
  @objc public func setAutoServerOtaDeviceInfo(progress: @escaping ((Swift.Float) -> Swift.Void), success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func getOnlineDialList(success: @escaping (([AntSDK.AntOnlineDialModel], AntSDK.AntError) -> Swift.Void))
  @objc public func getOnlineDialList(pageIndex: Swift.Int, pageSize: Swift.Int, page success: @escaping (([AntSDK.AntOnlineDialModel], AntSDK.AntError) -> Swift.Void))
  @objc public func setOnlienDialFile(model: Any, progress: @escaping ((Swift.Float) -> Swift.Void), success: @escaping ((AntSDK.AntError) -> Swift.Void))
  @objc public func testMultiplePackages(cmdClass: Swift.Int, cmdId: Swift.Int, totalLength: Swift.Int, subpackageLength: Swift.Int)
  @objc public func testUtf8StringData(cmdClass: Swift.Int, cmdId: Swift.Int, type: Swift.String, sendString: Swift.String)
  @objc public func testUnicodeStringData(cmdClass: Swift.Int, cmdId: Swift.Int, type: Swift.String, sendString: Swift.String)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class AntSDKLog : ObjectiveC.NSObject {
  @objc public class func writeStringToSDKLog(string: Swift.String)
  @objc public class func showLog() -> Swift.String
  @objc public class func showAllLog() -> Swift.String
  @objc public class func clear()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class AntBaseModule : ObjectiveC.NSObject {
  @objc public var matchingUUIDArray: [CoreBluetooth.CBUUID]?
  @objc public var serviceUUIDArray: [CoreBluetooth.CBUUID]?
  @objc dynamic public var scanInterval: Swift.Int
  @objc dynamic public var peripheral: CoreBluetooth.CBPeripheral? {
    @objc get
  }
  @objc dynamic public var blePowerState: CoreBluetooth.CBCentralManagerState {
    get
  }
  @objc public func peripheralStateChange(state: @escaping ((CoreBluetooth.CBPeripheralState) -> ()))
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @objc public func bluetoothPowerStateChange(state: @escaping ((CoreBluetooth.CBCentralManagerState) -> ()))
  @objc public func setIsNeedReconnect(state: Swift.Bool)
  @objc public func reconnectDevice(complete: @escaping (() -> ()))
  @objc public func getReconnectIdentifier() -> Swift.String
  @objc open func getSystemListPeripheral(modelArray: @escaping (([AntSDK.AntScanModel]) -> (Swift.Void)))
  @objc open func scanDevice(scanModel: @escaping ((AntSDK.AntScanModel) -> (Swift.Void)), modelArray: @escaping (([AntSDK.AntScanModel]) -> (Swift.Void)))
  @objc public func stopScan()
  @objc public func connectDevice(peripheral: Any, connectState: @escaping ((Swift.Bool) -> ()))
  @objc public func disconnect()
  public func CRC16(data: Foundation.Data) -> Swift.UInt16
  public func CRC16(val: [Swift.UInt8]) -> Swift.UInt16
  public func CRC32(val: [Swift.UInt8]) -> zlib.uLong
  public func CRC32(data: Foundation.Data) -> zlib.uLong
  @objc public func getNotificationTypeArrayWithIntString(countString: Swift.String) -> [AntSDK.AntNotificationType.RawValue]
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class AntScanModel : ObjectiveC.NSObject {
  @objc public var name: Swift.String?
  @objc public var rssi: Swift.Int
  @objc public var peripheral: CoreBluetooth.CBPeripheral?
  @objc public var uuidString: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum AntAlarmType : Swift.Int {
  case single
  case cycle
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class AntAlarmModel : ObjectiveC.NSObject {
  @objc public var alarmIndex: Swift.String?
  @objc public var alarmOpen: Swift.Bool
  @objc public var alarmTime: Swift.String?
  @objc public var alarmType: AntSDK.AntAlarmType
  @objc public var alarmRepeatArray: Swift.Array<Swift.Int>?
  @objc public var alarmRepeatCount: Swift.String?
  @objc override dynamic public init()
  public init(dic: [Swift.String : Any])
  @objc deinit
}
@objc public enum AntNotificationType : Swift.Int {
  case Call = 1
  case SMS
  case Instagram
  case Wechat
  case QQ
  case Line
  case LinkedIn
  case WhatsApp
  case Twitter
  case Facebook
  case Messenger
  case Skype
  case Snapchat
  case Other = 15
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class AntOnlineDialModel : ObjectiveC.NSObject {
  @objc public var dialId: Swift.Int
  @objc public var dialImageUrl: Swift.String?
  @objc public var dialFileUrl: Swift.String?
  @objc public var dialName: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class AntStartEndTimeModel : ObjectiveC.NSObject {
  @objc public var startHour: Swift.Int
  @objc public var startMinute: Swift.Int
  @objc public var endHour: Swift.Int
  @objc public var endMinute: Swift.Int
  @objc override dynamic public init()
  @objc deinit
}
extension AntSDK.AntError : Swift.Equatable {}
extension AntSDK.AntError : Swift.Hashable {}
extension AntSDK.AntError : Swift.RawRepresentable {}
extension AntSDK.AntAlarmType : Swift.Equatable {}
extension AntSDK.AntAlarmType : Swift.Hashable {}
extension AntSDK.AntAlarmType : Swift.RawRepresentable {}
extension AntSDK.AntNotificationType : Swift.Equatable {}
extension AntSDK.AntNotificationType : Swift.Hashable {}
extension AntSDK.AntNotificationType : Swift.RawRepresentable {}
